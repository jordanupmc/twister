package servlet;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.JSONException;
import org.json.JSONObject;

import services.Comments;
import services.ErrorService;
import bd.BDException;
import bd.Session;

public class GetStatsUser extends HttpServlet {
	protected void doPost(HttpServletRequest request,
			 HttpServletResponse response) throws ServletException, IOException {
		 doGet(request,response);
	}
	
	 protected void doGet(HttpServletRequest request,
			 HttpServletResponse response) throws ServletException, IOException {

		 response.setContentType( " text / plain" );
		 PrintWriter out = response.getWriter ();
		 
		 String token=request.getParameter("token");
		 String from=request.getParameter("from");
		 
		 boolean f;
		 
		 int id=0;
		 
		 try{
			 id=Integer.parseInt(from); //JUST CHECK IF from est bien un entier
		 }catch(NumberFormatException e){
			 out.println(ErrorService.serviceRefused(-1,"Param null"));
			 return;
		 }
		 
		 if(token==null || from == null){
			 out.println(ErrorService.serviceRefused(-1,"Param null"));
			 return;
		 }

		 try {
			 if(!Session.checkToken(token)){
				 out.println(ErrorService.serviceRefused(1000,"Token obsolete"));
				 Session.deleteToken(token);
				 return;

			 }
			 Session.updateToken(token);
		 } catch (BDException e) {
			 // TODO Auto-generated catch block
			 out.println(ErrorService.serviceRefused(1000,e.getMessage()));
			 return;
		 }
		 JSONObject obj=new JSONObject();
		 try {
			obj.put("like",Comments.countLike(from) );
			obj.put("post", Comments.countPost(from));
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			out.println(ErrorService.serviceRefused(1000,e.getMessage()));
		}
		 
		 
	 }
}
