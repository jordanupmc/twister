package bd;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;

import org.json.JSONArray;
import org.json.JSONObject;

import com.mysql.jdbc.Blob;

public class UserTools {

	public static boolean userExists(String login) throws BDException{
		boolean isExist=false;
		try{
		
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			Connection c=Database.getMySQLConnection();
		
			
			String query ="SELECT * FROM USER WHERE login='"+login+"';";
			Statement st =c.createStatement();
			ResultSet rs= st.executeQuery(query);
			
			if(rs.next())
				isExist=true;
			else
				isExist=false;
			
			rs.close();
			st.close();
			c.close();
			
		}catch(Exception e){
			System.out.println(e);
			throw new BDException("echec recuperation user");
		}
		return isExist;
	}
	
	

	public static JSONObject connect(String login, String password) throws BDException{
		/*
		 * INSERT DANS SESSION ( DANS tt les cas creation de compte ou connexion ) 
		 *  METTRE UNIQUE(login) DANS USER
		 */
		int id=-1;
		if(checkPassword(login,password)){
			id=getIdUser(login);
		}
		if(id==-1)
			throw new BDException("login ou password incorrect");

		return Session.insertSession(id, false);
	}

	
	public static boolean checkPassword(String login, String password)
			throws BDException {
		boolean isOK = false;
		try {
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			Connection c = Database.getMySQLConnection();

		    byte[] byteContent = password.getBytes();
		    java.sql.Blob blob =  c.createBlob();
		    blob.setBytes(1, byteContent);
			
		    
		    String query = "SELECT * FROM USER WHERE login=? AND password=? ;";
			
			PreparedStatement pstmt = c.prepareStatement(query);
			pstmt.setString(1, login);
		    pstmt.setString(2,password);
		    
		    ResultSet rs = pstmt.executeQuery();

			if (rs.next())
				isOK = true;
			else
				isOK = false;

			rs.close();
			pstmt.close();
			c.close();

		} catch (Exception e) {
			throw new BDException("echec verification password-user"+e);
		}

		return isOK;
	}
	
	
	public static int getIdUser(String login) throws BDException {
		int id = 0;
		try {
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			Connection c = Database.getMySQLConnection();
			Statement st = c.createStatement();
			String query = "SELECT id FROM USER WHERE login='" + login + "';";
			ResultSet rs = st.executeQuery(query);
			
			if(rs.next())
				id=rs.getInt(1);
			else
				id=-1;
			
			rs.close();
			st.close();
			c.close();

		} catch (Exception e) {
			System.out.println(e);
			throw new BDException("echec recuperation id-user");
		}
		return id;
	}
	
	public static String getLogin(String id) throws BDException {
	
		try {
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			Connection c = Database.getMySQLConnection();
			Statement st = c.createStatement();
			String query = "SELECT login FROM USER WHERE id='" + id + "';";
			ResultSet rs = st.executeQuery(query);
			
			if(rs.next())
				id=rs.getString(1);
			else
				id="inconnu";
			
			rs.close();
			st.close();
			c.close();

		} catch (Exception e) {
			System.out.println(e);
			throw new BDException("echec recuperation de login");
		}
		return id;
	}
	public static boolean insertUser(String prenom, String nom, String login, String password) throws BDException{
		try {
			
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			Connection c = Database.getMySQLConnection();
	//		Statement st = c.createStatement();
			
			String query = "INSERT INTO USER(login,password,nom,prenom) VALUES(?,?,?,?)";
			
			PreparedStatement pstmt = c.prepareStatement(query);
			pstmt.setString(1, login);
			pstmt.setString(2, password);
			pstmt.setString(3, nom);
			pstmt.setString(4,prenom);
			
			pstmt.executeUpdate();
			
			pstmt.close();
			c.close();
			
		}catch(Exception e){
			throw new BDException("Echec creation d'un user ");
		}
		return true;
	}
	
	public static JSONObject getUser(String login) throws BDException{
		JSONObject o=null;
		try {
			o=new JSONObject();
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			Connection c = Database.getMySQLConnection();
	//		Statement st = c.createStatement();
			
			String query = "SELECT nom,prenom FROM USER WHERE login= ?";
			
			PreparedStatement pstmt = c.prepareStatement(query);
			pstmt.setString(1, login);
			ResultSet rs = pstmt.executeQuery();

			if(rs.next()){
				o.put("nom",rs.getString(1));
				o.put("prenom", rs.getString(2));
				o.put("login", login);
			}else
				return null;
			
			rs.close();
			pstmt.close();
			c.close();
			
		}catch(Exception e){
			throw new BDException("Echec creation d'un user ");
		}
		return o;
	}

	public static boolean modifyUser(String prenom, String nom, int id) throws BDException{
		try {
			
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			Connection c = Database.getMySQLConnection();
	//		Statement st = c.createStatement();
			
			String query ="";
			PreparedStatement pstmt = null;
			if(!userExists(id))
				return false;
			
			if(prenom != null && nom != null){
				query ="UPDATE USER SET prenom = ?, nom= ? WHERE id=?";
				pstmt=c.prepareStatement(query);
				
				pstmt.setString(1, prenom);
				pstmt.setString(2, nom);
				pstmt.setInt(3, id);
				
				pstmt.executeUpdate();
			}
			else if(prenom != null){
				query ="UPDATE USER SET prenom = ? WHERE id=?";
				pstmt=c.prepareStatement(query);
				
				pstmt.setString(1, prenom);
				pstmt.setInt(2, id);
				pstmt.executeUpdate();
			}
			else if(nom != null){
				query ="UPDATE USER SET nom = ? WHERE id=?";
				pstmt= c.prepareStatement(query);
				
				pstmt.setString(1,nom);
				pstmt.setInt(2, id);
				pstmt.executeUpdate();
			}
			
			pstmt.close();
			c.close();
			
		}catch(Exception e){
			throw new BDException("Echec modification user");
		}
		return true;
	}
	
	
	public static JSONArray findUser(String q) throws BDException{
		JSONArray ar=new JSONArray();
		if(q == null)
			return null;
		try{
		
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			Connection c=Database.getMySQLConnection();
		
			
			String query = "SELECT id,login FROM USER WHERE login LIKE ? ORDER BY login LIMIT 15";
			
			PreparedStatement pstmt = c.prepareStatement("'%"+query+"%'");
			pstmt.setString(1, q);
			ResultSet rs= pstmt.executeQuery();
			
			JSONObject tmp;
			while(rs.next()){
				tmp=new JSONObject();

				tmp.put("id", rs.getString(1));
				tmp.put("login", rs.getString(2));
				ar.put(tmp);
			}
		
			rs.close();
			pstmt.close();
			c.close();
			
		}catch(Exception e){
			throw new BDException("echec find user");
		}
		return ar;
	}
	
	public static boolean userExists(int id) throws BDException{
		boolean isExist=false;
		try{
		
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			Connection c=Database.getMySQLConnection();
		
			
			String query = "SELECT * FROM USER WHERE id=?";
			
			PreparedStatement pstmt = c.prepareStatement(query);
			pstmt.setInt(1, id);
			ResultSet rs= pstmt.executeQuery();
			
			if(rs.next())
				isExist=true;
			else
				isExist=false;
			
			rs.close();
			pstmt.close();
			c.close();
			
		}catch(Exception e){
			System.out.println(e);
			throw new BDException("echec recuperation user");
		}
		return isExist;
	}

	public static boolean logout(String token) throws BDException{
		try {
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			Connection c = Database.getMySQLConnection();
			
			String query = "DELETE FROM session WHERE token=?";

			PreparedStatement pstmt = c.prepareStatement(query);
			pstmt.setString(1,token);
			pstmt.executeUpdate();
			
			pstmt.close();
			c.close();
		
		}catch(Exception e){
			throw new BDException("Echec deconnexion");
		}
		return true;
	}

}
